package br.edu.ifsp.list01;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

import java.util.ArrayList;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.*;

class Ex09Test {

    @ParameterizedTest
    @CsvSource(delimiter = '|', textBlock = """
        25, 30, 45, -1 | 33.33 3 0.00%
        10, 20, 30, 80, -1 | 35.00 3 25.00%
        17, 18, 19, 74, 75, 76, -1 |  46.50 5 16.67%
        25, -1 | 25.00 1 0.00%
        78, -1 | 78.00 1 100.00%
        2, 29, 30, 11, 38, 74, 94, 67, 33, 21, 75, 62, 95, 17, 77, 56, 49, 14, 87, 61, 48, 2, 64, 98, 50, 94, 55, 62, 77, 81, 79, 5, 80, 43, 54, 53, 51, 23, 85, 71, 10, 10, 64, 85, 36, 6, 20, 18, 48, 10, 32, 33, 89, 45, 88, 40, 56, 41, 0, 76, 53, 92, 45, 6, 57, 65, 3, 95, 53, 87, 82, 17, 6, 50, 24, 91, 77, 29, 21, 38, 4, 98, 37, 6, 60, 80, 52, 74, 39, 97, 7, 22, 88, 38, 92, 33, 85, 73, 62, 42, -1 | 50.54 82 27.00%
        35, 70, 76, 26, 32, 25, 49, 56, 50, 69, 29, 64, 16, 38, 67, 53, 38, 56, 51, 72, 38, 20, 64, 76, 32, 71, 79, 16, 17, 59, 31, 26, 39, 21, 22, 59, 34, 60, 30, 68, 34, 36, 40, 53, 66, 57, 67, 52, 44, 22, 28, 42, 52, 64, 15, 22, 69, 46, 37, 19, 79, 34, 56, 43, 79, 60, 52, 71, 30, 15, 69, 77, 39, 30, 60, 22, 26, 61, 51, 49, 55, 36, 60, 56, 20, 58, 54, 34, 46, 63, 26, 27, 19, 35, 49, 35, 73, 60, 54, 63, -1 | 46.25 95 6.00%
        95, 88, 52, 13, 68, 46, 11, 20, 7, 94, 42, 86, 99, 88, 52, 63, 62, 46, 43, 59, 56, 76, 15, 90, 57, 64, 6, 74, 43, 39, 60, 37, 54, 65, 77, 89, 57, 86, 52, 31, 66, 23, 40, 44, 43, 58, 54, 49, 97, 85, 65, 95, 27, 37, 45, 23, 3, 53, 10, 88, 35, 71, 57, 86, 38, 50, 16, 94, 55, 66, 49, 85, 16, 78, 98, 82, 97, 92, 37, 79, 71, 83, 37, 66, 52, 22, 65, 44, 29, 43, 55, 99, 19, 17, 19, 24, 40, 49, 24, 45, 29, 42, 50, 32, 83, 24, 35, 72, 92, 62, 47, 82, 75, 10, 65, 49, 41, 70, 35, 82, 32, 22, 58, 60, 82, 27, 2, 70, 2, 30, 97, 71, 67, 87, 17, 14, 44, 91, 15, 57, 49, 20, 40, 1, 92, 8, 35, 55, 25, 72, 43, 20, 42, 15, 93, 9, 64, 55, 34, 89, 23, 8, 29, 69, 79, 61, 54, 10, 96, 55, 59, 44, 64, 95, 81, 15, 8, 90, 83, 49, 40, 92, 22, 75, 58, 22, 31, 96, 36, 84, 63, 21, 59, 74, 38, 3, 80, 15, 71, 24, -5 | 52.05 174 23.50%
        5, 18, 75, -5 | 32.67 2 0.00%
    """)
    void testCompute(String input, String expected){
        final int[] inputAsString = stringToArray(input);
        Ex09 sut = new Ex09();
        assertThat(sut.compute(inputAsString)).isEqualTo(expected);
    }

    private static int[] stringToArray(String arrayString) {
        String[] stringValues = arrayString.split(", ");
        int[] array = new int[stringValues.length];
        for (int i = 0; i < stringValues.length; i++) {
            array[i] = Integer.parseInt(stringValues[i]);
        }
        return array;
    }
}